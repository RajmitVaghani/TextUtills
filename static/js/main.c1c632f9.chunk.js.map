{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","onClick","toggleMode","role","htmlFor","TextForm","useState","text","setText","style","color","heading","value","onChange","event","target","backgroundColor","rows","newText","toUpperCase","showAlert","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","split","join","filter","item","length","defaultProps","aboutText","Alert","alert","word","lower","charAt","slice","capitalize","msg","App","setMode","setAlert","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.c1c632f9.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n//import {Link} from \"react-router-dom\";\r\n \r\nexport default function Navbar(props) {\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n        <div className=\"container-fluid\">\r\n          {/* <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link> */}\r\n          <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n          <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span> \r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                {/* <Link className=\"nav-link active\" aria-current=\"page\" to =\"/\">Home</Link> */}\r\n                <a className=\"nav-link active\" aria-current=\"page\" href =\"#\">Home</a>\r\n              </li>\r\n              {/* <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to=\"/about\">{props.aboutText}</Link>\r\n              </li> */}\r\n            </ul>\r\n            {/* <form className=\"d-flex\">\r\n              <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n              <button className=\"btn btn-primary\" type=\"submit\">Search</button>\r\n            </form> */}\r\n            <div className={`form-check form-switch text-${props.mode === 'light' ? 'dark':'light'}`}>\r\n                  <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n                  <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable DarkMode</label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    )\r\n}\r\n                Navbar.propTypes ={title: PropTypes.string.isRequired,\r\n                    aboutText: PropTypes.string.isRequired\r\n                }    \r\n                Navbar.defaultProps ={\r\n                    title: 'Set title here',\r\n                    aboutText: 'Set About us here'\r\n                };","import React, {useState} from 'react'\r\n\r\nexport default function TextForm(props) {\r\n\r\n    const handleOnChange=(event)=>{\r\n        //console.log(\"On change\");\r\n        setText(event.target.value)     \r\n    }\r\n\r\n    const handleUpclick=()=>{\r\n       // console.log(\"Uppercase was clicked\" + text);\r\n        let newText = text.toUpperCase();\r\n        setText(newText)\r\n        props.showAlert(\"Converted to Uppercase!\" , \"success\");\r\n    }\r\n    const handleLoclick=()=>{\r\n        // console.log(\"Uppercase was clicked\" + text);\r\n         let newText = text.toLowerCase();\r\n         setText(newText)\r\n         props.showAlert(\"Converted to Lowercase!\" , \"success\");\r\n     }\r\n     const handleClearclick=()=>{\r\n        // console.log(\"Uppercase was clicked\" + text);\r\n         let newText = '';\r\n         setText(newText)\r\n         props.showAlert(\"Text Cleared!\" , \"success\");\r\n     }\r\n    const handleCopy =()=>{\r\n        var text = document.getElementById(\"myBox\");\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value);\r\n        props.showAlert(\"Copy to clipboard!\" , \"success\");\r\n    }\r\n    const handleExtraSpace =()=>{\r\n        let newText = text.split(/[ ]+/);\r\n        setText(newText.join(\" \"));\r\n        props.showAlert(\"Extra spaces removed!\" , \"success\");\r\n    }\r\n\r\n    const [text, setText] = useState('');\r\n    //setText(\"new text\");\r\n    return (\r\n        <>\r\n        <div className = \"container\"style={{color: props.mode === 'dark'?'white':'#042743'}}>\r\n            <h1>{props.heading}</h1>\r\n                <div className=\"mb-3\">\r\n                <textarea className=\"form-control\"  value={text} onChange={handleOnChange} \r\n                style={{backgroundColor: props.mode === 'dark'?'grey':'white',color:props.mode==='dark'?'white':'#042743'}} id=\"myBox\" rows=\"8\"></textarea>\r\n                </div>\r\n             <button className=\"btn btn-primary mx-1\" onClick={handleUpclick}>Convert to Uppercase</button>\r\n             <button className=\"btn btn-primary mx-1\" onClick={handleLoclick}>Convert to Lowercase</button>\r\n             <button className=\"btn btn-primary mx-1\" onClick={handleClearclick}>Clear Text</button>\r\n             <button className=\"btn btn-primary mx-1\" onClick={handleCopy}>Copy Text</button>\r\n             <button className=\"btn btn-primary mx-1\" onClick={handleExtraSpace}>Remove Extra Space</button>\r\n\r\n\r\n\r\n        </div>\r\n        <div className = \"container my-3\" style={{color: props.mode === 'dark'?'white':'#042743'}}>\r\n            <h2>Your text summary</h2>\r\n            {/* <p>{text.split(\" \").length-1} <b>words</b> and {text.length} <b>characters</b></p> */}\r\n\r\n             <p>{text.split(\" \").filter(item => item).length} words , {text.length} Characters</p>\r\n\r\n            <p>{0.008 * text.split(\" \").length} <b>Minutes read</b></p>\r\n            <h2>Preview</h2>\r\n            <p>{text}</p>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n     ","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    const capitalize =(word)=>{\r\n            const lower = word.toLowerCase();\r\n            return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n    return (\r\n        \r\n            props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n                <strong>{capitalize(props.alert.type)}</strong> :{props.alert.msg}\r\n                {/* <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button> */}\r\n            </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Alert\r\n","import './App.css';\n// import About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport React, { useState } from 'react';\nimport Alert from './components/Alert';\n\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n// } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState('light');\nconst [alert, setAlert] = useState(null);\n\nconst showAlert =(message , type)=>{\n\nsetAlert({\n  msg:message,\n  type:type\n})\nsetTimeout(() => {\n  setAlert(null);\n}, 1500);\n\n}\n  const  toggleMode=()=>{\n     if(mode === 'light'){\n       setMode('dark');\n       document.body.style.backgroundColor = '#042743'\n       showAlert(\"Dark mode has been enabled\",\"success\");\n       document.title = 'TextUtils - DarkMode';\n      //  setInterval(() => {\n      //   document.title = 'TextUtils is Amazing';\n      //  }, 2000);\n      //  setInterval(() => {\n      //   document.title = 'Install TextUtils now';\n      //  }, 1500);\n     }\n     else{\n       setMode('light');\n       document.body.style.backgroundColor = 'white'\n       showAlert(\"Light mode has been enabled\",\"success\");\n       document.title = 'TextUtils - LightMode';\n     }\n}\n\n  return (\n  <>\n\n{/* <Navbar/> */}\n{/* <Router> */}\n<Navbar title=\"TextUtils \" mode={mode} toggleMode={toggleMode}/>\n<Alert alert = {alert}/>\n\n<div className=\"container my-3\">\n\n{/* <Switch>\n          <Route exact path=\"/about\">\n            <About />\n          </Route>\n          \n          <Route exact path=\"/\"> */}\n          <TextForm showAlert ={showAlert} heading=\"Enter the text to analyze below\" mode={mode}/>\n          {/* </Route>\n        </Switch> */}\n\n\n{/* <About/> */}\n</div>\n{/* </Router> */}\n  </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}